#!/bin/sh
#-
# Copyright (c) 2012 Devin Teske
# All Rights Reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $FreeBSD$
#
############################################################ INCLUDES

BSDCFG_SHARE="/usr/share/bsdconfig"
. $BSDCFG_SHARE/common.subr || exit 1
f_dprintf "%s: loading includes..." "$0"
f_include $BSDCFG_SHARE/dialog.subr
f_include $BSDCFG_SHARE/mustberoot.subr
f_include $BSDCFG_SHARE/sysrc.subr

BSDCFG_LIBE="/usr/libexec/bsdconfig" APP_DIR="080.console"
f_include_lang $BSDCFG_LIBE/$APP_DIR/include/messages.subr

ipgm=$( f_index_menusel_keyword $BSDCFG_LIBE/$APP_DIR/INDEX "$pgm" )
[ $? -eq $SUCCESS -a "$ipgm" ] && pgm="$ipgm"

############################################################ CONFIGURATION

#
# Location of ttys(5)
#
ETC_TTYS=/etc/ttys

############################################################ GLOBALS

#
# Terminal-type map/menu-item list
#
TTY_MENU_LIST="
	'1 $msg_none'                '$msg_none_ttys_desc'
	'2 $msg_ibm_437_vga_default' 'cons25'
	'3 $msg_iso_8859_1'          'cons25l1'
	'4 $msg_iso_8859_2'          'cons25l2'
	'5 $msg_iso_8859_7'          'cons25l7'
	'6 $msg_koi8_r'              'cons25r'
	'7 $msg_koi8_u'              'cons25u'
	'8 $msg_us_ascii'            'cons25w'
" # END-QUOTE

############################################################ FUNCTIONS

# dialog_menu_main
#
# Display the dialog(1)-based application main menu.
#
dialog_menu_main()
{
	local size
	local hline="$hline_choose_a_terminal_type"
	local prompt="$msg_ttys_menu_text"

	size=$( eval f_dialog_menu_size \
	        	\"\$DIALOG_TITLE\"     \
	        	\"\$DIALOG_BACKTITLE\" \
	                \"\$prompt\"           \
	        	\"\$hline\"            \
	        	$TTY_MENU_LIST         )

	local dialog_menu
	dialog_menu=$( eval $DIALOG \
		--clear --title \"\$DIALOG_TITLE\" \
		--backtitle \"\$DIALOG_BACKTITLE\" \
		--hline \"\$hline\"                \
		--ok-label \"\$msg_ok\"            \
		--cancel-label \"\$msg_cancel\"    \
		--menu \"\$prompt\" $size          \
		$TTY_MENU_LIST                     \
		2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
	)
	local retval=$?
	setvar DIALOG_MENU_$$ "$dialog_menu"
	return $retval
}

# ttys_set_type $consterm
#
# Set terminal type of `ttyv*' and `cons[0-9]' entries in ttys(5) to $consterm.
#
ttys_set_type()
{
	local consterm="$1"

	#
	# Create new temporary file to write our ttys(5) update with new types.
	#
	local tmpfile="$( mktemp -t "pgm" )"
	[ "$tmpfile" ] || return $FAILURE

	#
	# Fixup permissions and ownership (mktemp(1) creates the temporary file
	# with 0600 permissions -- change the permissions and ownership to
	# match ttys(5) before we write it out and mv(1) it into place).
	#
	local mode="$( stat -f '%#Lp' "$ETC_TTYS" 2> /dev/null )"
	local owner="$( stat -f '%u:%g' "$ETC_TTYS" 2> /dev/null )"
	f_quietly chmod "${mode:-0644}" "$tmpfile"
	f_quietly chown "${owner:-root:wheel}" "$tmpfile"

	#
	# Operate on ttys(5), replacing only the types of `ttyv*' and
	# `cons[0-9]' terminals with the new type.
	#
	awk -v consterm="$consterm" '
	BEGIN {
	}
	{
		# "Skip" blank-lines, lines containing only whitespace, and
		# lines containing only a comment or whitespace-then-comment.
		#
		if ( $0 ~ /^[[:space:]]*(#|$)/ ) { print; next }

		# "Skip" terminal types other than those supported
		#
		if ( $1 !~ /^(ttyv.*|cons[0-9])$/ ) { print; next }

		# Change the terminal type to the new value
		#
		match($0, /[[:alnum:]\.\+-_]+[[:space:]]+(on|off).*$/)
		if ( ! RSTART ) { print; next }
		left = substr($0, 0, RSTART - 1)
		match($0, /[[:space:]]+(on|off).*$/)
		right = substr($0, RSTART)
		printf "%s%s%s\n", left, consterm, right
	}
	' "$ETC_TTYS" > "$tmpfile" || return $FAILURE
	f_quietly mv "$tmpfile" "$ETC_TTYS" || return $FAILURE

	return $SUCCESS
}

############################################################ MAIN

# Incorporate rc-file if it exists
[ -f "$HOME/.bsdconfigrc" ] && f_include "$HOME/.bsdconfigrc"

#
# Process command-line arguments
#
while getopts hSX flag; do
	case "$flag" in
	h|\?) f_usage $BSDCFG_LIBE/$APP_DIR/USAGE "PROGRAM_NAME" "$pgm";;
	esac
done
shift $(( $OPTIND - 1 ))

#
# Initialize
#
f_dialog_title "$msg_system_console_terminal_type"
f_dialog_backtitle "${ipgm:+bsdconfig }$pgm"
f_mustberoot_init

#
# Launch application main menu
#
while :; do
	dialog_menu_main
	retval=$?
	mtag=$( f_dialog_menutag )

	[ $retval -eq 0 ] || f_die
	[ "$mtag" = "1 $msg_none" ] && break

	consterm=$( eval f_dialog_menutag2item \"\$mtag\" $TTY_MENU_LIST )
	err=$( ttys_set_type "$consterm" 2>&1 )
	[ "$err" ] || break

	f_dialog_msgbox "$err"
done

exit $SUCCESS

################################################################################
# END
################################################################################
